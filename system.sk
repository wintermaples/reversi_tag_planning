# 満腹度による回復を禁止
every 1 seconds:
  loop all players:
    set food level of loop-player to 5

# 矢が残るのを防止
on projectile hit:
  if the projectile is arrow:
    delete the projectile

# クロスボウの矢が減らないように
on shoot:
  if the shooter's tool is crossbow:
    add 1 arrow to the shooter

# ########## ドロップ・アイテム入れ替え防止 ##########
on inventory click:
  if player's gamemode is not creative:
    cancel event

on drop:
  # ゲームが始まっていないときは落とせるようにする(giveコマンドが二重にアイテムを渡してしまうのを防止)
  set {_variables_objective} to scoreboard objective "variables"
  set {_game_state} to scoreboard number of scoreboard {_variables_objective} score of entry "game_state"
  if {_game_state} is 0:
    exit

  if player's gamemode is not creative:
    cancel event
# ####################

every 43 seconds:
  reset {_players::*}
  loop all players:
    if loop-player's world is not "world":
      add loop-player to {_players::*}
  
  play sound "ambient.basalt_deltas.loop" in ambient category for {_players::*}

# Creative以外でのブロック設置禁止
on place:
  if player's gamemode is not creative:
    cancel event

# Creative以外でのブロック破壊禁止
on break:
  if player's gamemode is not creative:
    cancel event

# ロビーでのPvP禁止
on damage of a player:
  if the victim's world is "world":
    if the damage cause is not void:
      cancel event

every 60 seconds:
  broadcast "§a[定期]詰んだらチャットお願いします!"

# Creative以外でのチェスト開封禁止
on rightclick on a chest:
  if player's gamemode is not creative:
    cancel event

# プレイヤーが透明になっているときに矢が当たらないように
on shoot:
  if the shooter's tool is bow:
    if {hidden_player_list::%shooter%} is true:
      cancel event

# コマンドブロックでできない初期化処理
command /init:
  permission: sk.command.init
  trigger:
    loop all dropped items:
      kill loop-value
    loop all entities:
      if the type of loop-value is armor stand:
        kill loop-value

# プレイヤー以外をなぐるの禁止
on damage:
  if attacker's gamemode is creative:
    exit
  if victim is not player:
    cancel event